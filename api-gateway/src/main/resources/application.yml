server:
  port: 8080
  shutdown: graceful
  error:
    include-message: always
    include-binding-errors: always

spring:
  application:
    name: api-gateway

  lifecycle:
    timeout-per-shutdown-phase: 30s

  # Redis Configuration
  data:
    redis:
      host: ${REDIS_HOST:redis}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:devredis123}
      timeout: 2000ms
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0
          max-wait: -1ms

  cloud:
    gateway:
      server:
        webflux:
          httpclient:
            connect-timeout: 5000
            response-timeout: 10s
            pool:
              type: elastic
              max-connections: 500
              max-idle-time: 30s

          globalcors:
            cors-configurations:
              "[/**]":
                # Replace with your actual frontend URLs
                allowedorigins:
                  - "http://localhost:3000"
                  - "http://localhost:5173"
                  - "https://yourdomain.com"
                allowedmethods:
                  - GET
                  - POST
                  - PUT
                  - DELETE
                  - PATCH
                  - OPTIONS
                allowedheaders: "*"
                exposedheaders:
                  - Authorization
                  - Content-Type
                allowcredentials: true
                maxage: 3600

      default-filters:
        - DedupeResponseHeader=Access-Control-Allow-Credentials Access-Control-Allow-Origin
        # Note: RequestRateLimiter removed from default-filters to allow Swagger endpoints
        # Rate limiting is applied individually to routes that need it

# JWT Configuration
jwt:
  # IMPORTANT: Use environment variable in production
  # Generate with: openssl rand -base64 64
  secret: ${JWT_SECRET:mySecretKeyForJWTTokenGenerationThatIsLongEnoughForHS512Algorithm}
  expiration: ${JWT_EXPIRATION:3600000} # 1 hour in milliseconds

# CORS Configuration
cors:
  allowed-origins: ${CORS_ALLOWED_ORIGINS:http://localhost:3000,http://localhost:5173}

# Rate Limiting Configuration
rate-limit:
  enabled: true
  capacity: 100
  refill-tokens: 100
  refill-duration-minutes: 1

# Service URLs
auth-service:
  url: ${AUTH_SERVICE_URL:http://auth-service:8082}

user-service:
  url: ${USER_SERVICE_URL:http://user-service:8081}

# Actuator Configuration
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,gateway,prometheus
      base-path: /actuator
  endpoint:
    health:
      show-details: always
      probes:
        enabled: true
  health:
    circuitbreakers:
      enabled: true
  metrics:
    distribution:
      percentiles-histogram:
        http.server.requests: true
  prometheus:
    metrics:
      export:
        enabled: true

# Resilience4j Configuration
resilience4j:
  circuitbreaker:
    instances:
      authServiceCircuitBreaker:
        registerHealthIndicator: true
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        permittedNumberOfCallsInHalfOpenState: 3
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 30s
        failureRateThreshold: 50
        eventConsumerBufferSize: 10
      userServiceCircuitBreaker:
        registerHealthIndicator: true
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        permittedNumberOfCallsInHalfOpenState: 3
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 30s
        failureRateThreshold: 50
        eventConsumerBufferSize: 10
      userServiceGraphQLCircuitBreaker:
        registerHealthIndicator: true
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        permittedNumberOfCallsInHalfOpenState: 3
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 30s
        failureRateThreshold: 50
        eventConsumerBufferSize: 10

  timelimiter:
    instances:
      authServiceCircuitBreaker:
        timeoutDuration: 10s
      userServiceCircuitBreaker:
        timeoutDuration: 10s
      userServiceGraphQLCircuitBreaker:
        timeoutDuration: 15s

# OpenAPI/Swagger Configuration
springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
    operations-sorter: method
    tags-sorter: alpha
    try-it-out-enabled: true

# Logging Configuration
logging:
  level:
    root: INFO
    org.springframework.cloud.gateway: DEBUG
    com.microservices.apigateway: DEBUG
    io.github.resilience4j: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/api-gateway.log
  logback:
    rollingpolicy:
      max-file-size: 10MB
      max-history: 30
