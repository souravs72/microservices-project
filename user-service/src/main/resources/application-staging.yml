# Staging Environment Configuration for User Service
spring:
  profiles:
    active: staging

  # Database Configuration - PostgreSQL for staging
  datasource:
    url: ${DB_URL:jdbc:postgresql://user-db-staging:5432/userdb}
    driver-class-name: org.postgresql.Driver
    username: ${DB_USERNAME:useruser}
    password: ${DB_PASSWORD:}
    hikari:
      maximum-pool-size: 15
      minimum-idle: 3
      connection-timeout: 25000
      idle-timeout: 450000
      max-lifetime: 1500000
      leak-detection-threshold: 60000
      validation-timeout: 5000
      connection-test-query: SELECT 1

  # JPA Configuration
  jpa:
    hibernate:
      ddl-auto: update # Allow schema updates in staging
    show-sql: false
    properties:
      hibernate:
        format_sql: false
        dialect: org.hibernate.dialect.PostgreSQLDialect
        jdbc:
          time_zone: UTC
        connection:
          provider_disables_autocommit: true
        order_inserts: true
        order_updates: true
        batch_size: 20
        batch_versioned_data: true

  # SQL Initialization disabled in staging
  sql:
    init:
      mode: never

  # H2 Console disabled in staging
  h2:
    console:
      enabled: false

  # GraphQL Configuration - Moderate access for staging
  graphql:
    graphiql:
      enabled: true # Enabled for testing
    schema:
      locations: classpath:graphql/
      file-extensions: .graphqls
      introspection:
        enabled: true # Enabled for testing
    cors:
      allowed-origins: ${CORS_ALLOWED_ORIGINS:https://staging.yourdomain.com,http://localhost:3000,http://localhost:5173}
      allowed-methods: POST,OPTIONS,GET
    http:
      path: /graphql

  # Redis Configuration - Staging Redis
  data:
    redis:
      host: ${REDIS_HOST:redis-staging}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:}
      timeout: 3000ms
      lettuce:
        pool:
          max-active: 15
          max-idle: 8
          min-idle: 3
          max-wait: 3000ms

  # Kafka Configuration - Staging Kafka
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:kafka-staging:9092}
    consumer:
      group-id: user-service-staging
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      enable-auto-commit: false
      max-poll-records: 500
      session-timeout-ms: 30000
      heartbeat-interval-ms: 10000
      properties:
        isolation.level: read_committed

# Auth Service Configuration - Staging
auth:
  service:
    url: ${AUTH_SERVICE_URL:http://auth-service-staging:8082}
    validate-endpoint: /api/auth/validate

# JWT Configuration - Staging Secret
jwt:
  secret: ${JWT_SECRET:staging_secret_key_XK7fJ3mP9vN2wQ8rT5yU6iO1pA4sD7fG9hJ2kL5nM8qR3tY6uI9oP2aS5dF8gH1jK4lZ7xC0vB3nM6qW9eR2tY5uI8oP1aS4dF7gH0jK3lZ6xC9vB2nM5qW8eR1tY4u==}

# Security Configuration - Balanced for staging
app:
  security:
    internal-api-key: ${INTERNAL_API_KEY:staging-internal-api-key}
    max-requests-per-minute: 150 # Moderate limits
    max-graphql-depth: 12
