spring:
  datasource:
    url: jdbc:h2:mem:testdb
    driver-class-name: org.h2.Driver
    username: sa
    password: password
  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: true
    properties:
      hibernate:
        format_sql: true
  h2:
    console:
      enabled: true
  mail:
    host: localhost
    port: 587
    username: test@example.com
    password: testpassword
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      group-id: notification-service-dev
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
  data:
    redis:
      host: localhost
      port: 6379
      password: testpassword
      timeout: 2000ms
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0

# JWT Configuration
spring:
  security:
    oauth2:
      resourceserver:
        jwt:
          secret-key: ${JWT_SECRET:test-secret-key-for-development-only}

# Internal API Key
internal:
  api:
    key: ${INTERNAL_API_KEY:test-internal-api-key}

# Kafka Topics
kafka:
  topics:
    user-events: ${KAFKA_USER_EVENTS_TOPIC:user-events-dev}
    user-events-dlq: ${KAFKA_USER_EVENTS_DLQ_TOPIC:user-events-dlq-dev}

# Management endpoints
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
      base-path: /actuator
  endpoint:
    health:
      show-details: when-authorized
